<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="a4e7fb91-f931-4493-b494-220eb0cbe7f1" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FavoritesManager">
    <favorites_list name="githubissuecli" />
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>Filepath</find>
    </findStrings>
  </component>
  <component name="GOROOT" path="/usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1RRQbfQhTm53CA1RlwSyNLLENWp" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="configurable.Global.GOPATH.is.expanded" value="true" />
    <property name="configurable.Module.GOPATH.is.expanded" value="true" />
    <property name="configurable.Project.GOPATH.is.expanded" value="true" />
    <property name="go.gopath.indexing.explicitly.defined" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.tried.to.enable.integration.vgo.integrator" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="settings.editor.selected.configurable" value="go.sdk" />
  </component>
  <component name="RecentsManager">
    <key name="GoReplayTraceAction.RECENT_TRACE_KEY">
      <recent name="$USER_HOME$/.local/share/rr/latest-trace" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/pkg/repos" />
      <recent name="$PROJECT_DIR$/pkg/github" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Go Build.go build main.go">
    <configuration name="go build main.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="githubissuecli" />
      <working_directory value="$PROJECT_DIR$/" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <package value="github.com/zhangchl007/githubissuecli" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetRepos in github.com/zhangchl007/githubissuecli/pkg/repos" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="githubissuecli" />
      <working_directory value="$PROJECT_DIR$/pkg/repos" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/zhangchl007/githubissuecli/pkg/repos" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <pattern value="^TestGetRepos$" />
      <method v="2" />
    </configuration>
    <configuration name="TestParsehttpurl in github.com/zhangchl007/githubissuecli/pkg/repos" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="githubissuecli" />
      <working_directory value="$PROJECT_DIR$/pkg/repos" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/zhangchl007/githubissuecli/pkg/repos" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <pattern value="^TestParsehttpurl$" />
      <method v="2" />
    </configuration>
    <configuration name="TestUpdateRepos in github.com/zhangchl007/githubissuecli/pkg/repos" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="githubissuecli" />
      <working_directory value="$PROJECT_DIR$/pkg/repos" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/zhangchl007/githubissuecli/pkg/repos" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <pattern value="^TestUpdateRepos$" />
      <method v="2" />
    </configuration>
    <configuration name="reposhandle_test.go" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="githubissuecli" />
      <working_directory value="$PROJECT_DIR$/pkg/repos" />
      <framework value="gotest" />
      <kind value="FILE" />
      <package value="github.com/zhangchl007/githubissuecli" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/pkg/repos/reposhandle_test.go" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build main.go" />
        <item itemvalue="Go Test.TestParsehttpurl in github.com/zhangchl007/githubissuecli/pkg/repos" />
        <item itemvalue="Go Test.reposhandle_test.go" />
        <item itemvalue="Go Test.TestUpdateRepos in github.com/zhangchl007/githubissuecli/pkg/repos" />
        <item itemvalue="Go Test.TestGetRepos in github.com/zhangchl007/githubissuecli/pkg/repos" />
      </list>
    </recent_temporary>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
    <proxy>goproxy.io</proxy>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/githubissuecli$TestGetIssues_in_github_com_zhangchl007_githubissuecli_pkg_github.out" NAME="TestGetIssues in github.com/zhangchl007/githubissuecli/pkg/github Coverage Results" MODIFIED="1569026815279" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>